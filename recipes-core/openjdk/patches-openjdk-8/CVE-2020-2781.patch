From 0039b0537628dd53ccdd76c8aff7b0a2f7186f33 Mon Sep 17 00:00:00 2001
From: Anand Je Sypureddy <anandje@mvista.com>
Date: Thu, 13 Aug 2020 11:15:20 +0530
Subject: [PATCH 1/6] changeset 13892:b6be024c35ca

8234408: Improve TLS session handling

Upstream Status: Backport http://hg.openjdk.java.net/jdk8u/jdk8u/jdk/rev/b6be024c35ca
CVE: CVE-2020-2781

Reviewed-by: andrew
Signed-off-by: Anand Je Sypureddy <anandje@mvista.com>
---
 .../sun/security/ssl/ClientHandshaker.java        |  2 +-
 .../classes/sun/security/ssl/SSLEngineImpl.java   |  2 +-
 .../classes/sun/security/ssl/SSLSessionImpl.java  | 15 +--------------
 .../classes/sun/security/ssl/SSLSocketImpl.java   |  2 +-
 4 files changed, 4 insertions(+), 17 deletions(-)

diff --git a/jdk/src/share/classes/sun/security/ssl/ClientHandshaker.java b/jdk/src/share/classes/sun/security/ssl/ClientHandshaker.java
index 7edef24c..0a8ff684 100644
--- a/jdk/src/share/classes/sun/security/ssl/ClientHandshaker.java
+++ b/jdk/src/share/classes/sun/security/ssl/ClientHandshaker.java
@@ -1287,7 +1287,7 @@ final class ClientHandshaker extends Handshaker {
     @Override
     HandshakeMessage getKickstartMessage() throws SSLException {
         // session ID of the ClientHello message
-        SessionId sessionId = SSLSessionImpl.nullSession.getSessionId();
+        SessionId sessionId = new SessionId(new byte[0]);
 
         // a list of cipher suites sent by the client
         CipherSuiteList cipherSuites = getActiveCipherSuites();
diff --git a/jdk/src/share/classes/sun/security/ssl/SSLEngineImpl.java b/jdk/src/share/classes/sun/security/ssl/SSLEngineImpl.java
index e021d8ee..be330751 100644
--- a/jdk/src/share/classes/sun/security/ssl/SSLEngineImpl.java
+++ b/jdk/src/share/classes/sun/security/ssl/SSLEngineImpl.java
@@ -366,7 +366,7 @@ final public class SSLEngineImpl extends SSLEngine {
         }
 
         sslContext = ctx;
-        sess = SSLSessionImpl.nullSession;
+        sess = new SSLSessionImpl();
         handshakeSession = null;
 
         /*
diff --git a/jdk/src/share/classes/sun/security/ssl/SSLSessionImpl.java b/jdk/src/share/classes/sun/security/ssl/SSLSessionImpl.java
index d96cde62..aeee1718 100644
--- a/jdk/src/share/classes/sun/security/ssl/SSLSessionImpl.java
+++ b/jdk/src/share/classes/sun/security/ssl/SSLSessionImpl.java
@@ -73,11 +73,6 @@ import static sun.security.ssl.CipherSuite.KeyExchange.*;
  */
 final class SSLSessionImpl extends ExtendedSSLSession {
 
-    /*
-     * we only really need a single null session
-     */
-    static final SSLSessionImpl         nullSession = new SSLSessionImpl();
-
     // compression methods
     private static final byte           compression_null = 0;
 
@@ -144,7 +139,7 @@ final class SSLSessionImpl extends ExtendedSSLSession {
      * be used either by a client or by a server, as a connection is
      * first opened and before handshaking begins.
      */
-    private SSLSessionImpl() {
+    SSLSessionImpl() {
         this(ProtocolVersion.NONE, CipherSuite.C_NULL, null,
             new SessionId(false, null), null, -1, false);
     }
@@ -647,14 +642,6 @@ final class SSLSessionImpl extends ExtendedSSLSession {
      */
     @Override
     synchronized public void invalidate() {
-        //
-        // Can't invalidate the NULL session -- this would be
-        // attempted when we get a handshaking error on a brand
-        // new connection, with no "real" session yet.
-        //
-        if (this == nullSession) {
-            return;
-        }
         invalidated = true;
         if (debug != null && Debug.isOn("session")) {
             System.out.println("%% Invalidated:  " + this);
diff --git a/jdk/src/share/classes/sun/security/ssl/SSLSocketImpl.java b/jdk/src/share/classes/sun/security/ssl/SSLSocketImpl.java
index d7322dd5..f88c6a31 100644
--- a/jdk/src/share/classes/sun/security/ssl/SSLSocketImpl.java
+++ b/jdk/src/share/classes/sun/security/ssl/SSLSocketImpl.java
@@ -601,7 +601,7 @@ final public class SSLSocketImpl extends BaseSSLSocketImpl {
      */
     private void init(SSLContextImpl context, boolean isServer) {
         sslContext = context;
-        sess = SSLSessionImpl.nullSession;
+        sess = new SSLSessionImpl();
         handshakeSession = null;
 
         /*
-- 
2.28.0

