From dfbb2cfbc4887184487206224f0503a7ccd2b3f6 Mon Sep 17 00:00:00 2001
From: Yuri Nesterenko <yan@openjdk.org>
Date: Fri, 15 Mar 2024 15:35:52 +0000
Subject: [PATCH] 8324559: Improve 2D image handling

Reviewed-by: mbalao, andrew
Backport-of: 1a5a44019871c411148ca85d0491cc68d2256e4e

Upstream-Status: Backport [https://github.com/openjdk/jdk8u/commit/dfbb2cfbc4887184487206224f0503a7ccd2b3f6]
CVE: CVE-2024-21145
Signed-off-by: Hitendra Prajapati <hprajapati@mvista.com>
---
 jdk/src/share/native/sun/java2d/loops/MaskFill.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/jdk/src/share/native/sun/java2d/loops/MaskFill.c b/jdk/src/share/native/sun/java2d/loops/MaskFill.c
index 35493406..fe0bc406 100644
--- a/jdk/src/share/native/sun/java2d/loops/MaskFill.c
+++ b/jdk/src/share/native/sun/java2d/loops/MaskFill.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2000, 2024, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
@@ -467,7 +467,7 @@ storePgram(EdgeInfo *pLeftEdge, EdgeInfo *pRightEdge,
 #define INSERT_ACCUM(pACCUM, IMIN, IMAX, X0, Y0, X1, Y1, CX1, CX2, MULT) \
     do { \
         jdouble xmid = ((X0) + (X1)) * 0.5; \
-        if (xmid <= (CX2)) { \
+        if (xmid < (CX2)) { \
             jdouble sliceh = ((Y1) - (Y0)); \
             jdouble slicearea; \
             jint i; \
@@ -556,7 +556,7 @@ fillAAPgram(NativePrimitive *pPrim, SurfaceDataRasInfo *pRasInfo,
     jint cy2 = pRasInfo->bounds.y2;
     jint width = cx2 - cx1;
     EdgeInfo edges[4];
-    jfloat localaccum[MASK_BUF_LEN + 1];
+    jfloat localaccum[MASK_BUF_LEN + 2];
     jfloat *pAccum;
 
     if (!storePgram(edges + 0, edges + 2,
@@ -568,12 +568,12 @@ fillAAPgram(NativePrimitive *pPrim, SurfaceDataRasInfo *pRasInfo,
     }
 
     pAccum = ((width > MASK_BUF_LEN)
-              ? malloc((width + 1) * sizeof(jfloat))
+              ? malloc((width + 2) * sizeof(jfloat))
               : localaccum);
     if (pAccum == NULL) {
         return;
     }
-    memset(pAccum, 0, (width+1) * sizeof(jfloat));
+    memset(pAccum, 0, (width + 2) * sizeof(jfloat));
 
     while (cy1 < cy2) {
         jint lmin, lmax, rmin, rmax;
@@ -794,7 +794,7 @@ drawAAPgram(NativePrimitive *pPrim, SurfaceDataRasInfo *pRasInfo,
     jint cy2 = pRasInfo->bounds.y2;
     jint width = cx2 - cx1;
     EdgeInfo edges[8];
-    jfloat localaccum[MASK_BUF_LEN + 1];
+    jfloat localaccum[MASK_BUF_LEN + 2];
     jfloat *pAccum;
 
     if (!storePgram(edges + 0, edges + 6,
@@ -815,12 +815,12 @@ drawAAPgram(NativePrimitive *pPrim, SurfaceDataRasInfo *pRasInfo,
                JNI_TRUE);
 
     pAccum = ((width > MASK_BUF_LEN)
-              ? malloc((width + 1) * sizeof(jfloat))
+              ? malloc((width + 2) * sizeof(jfloat))
               : localaccum);
     if (pAccum == NULL) {
         return;
     }
-    memset(pAccum, 0, (width+1) * sizeof(jfloat));
+    memset(pAccum, 0, (width + 2) * sizeof(jfloat));
 
     while (cy1 < cy2) {
         jint lmin, lmax, rmin, rmax;
-- 
2.25.1

