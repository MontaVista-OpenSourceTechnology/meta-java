From bffe2842ea81ed73668e72bc1009f21ac4c2023f Mon Sep 17 00:00:00 2001
From: Martin Balao <mbalao@openjdk.org>
Date: Wed, 24 Jan 2024 06:21:44 +0000
Subject: [PATCH] 8323231: Improve array management

Reviewed-by: andrew
Backport-of: cf20364d0cb3f182880ee91c7fb023615e27becf

Upstream-Status: Backport [https://github.com/openjdk/jdk8u/commit/bffe2842ea81ed73668e72bc1009f21ac4c2023f]
CVE: CVE-2024-21147
Signed-off-by: Hitendra Prajapati <hprajapati@mvista.com>
---
 hotspot/src/share/vm/c1/c1_RangeCheckElimination.cpp | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/hotspot/src/share/vm/c1/c1_RangeCheckElimination.cpp b/hotspot/src/share/vm/c1/c1_RangeCheckElimination.cpp
index 71e9de00..fafbeb35 100644
--- a/hotspot/src/share/vm/c1/c1_RangeCheckElimination.cpp
+++ b/hotspot/src/share/vm/c1/c1_RangeCheckElimination.cpp
@@ -439,15 +439,15 @@ void RangeCheckEliminator::in_block_motion(BlockBegin *block, AccessIndexedList
 
           if (c) {
             int value = c->type()->as_IntConstant()->value();
-            if (value != min_jint) {
-              if (ao->op() == Bytecodes::_isub) {
-                value = -value;
+	      if (ao->op() == Bytecodes::_iadd) {
+              base = java_add(base, value);
+              } else {
+              assert(ao->op() == Bytecodes::_isub, "unexpected bytecode");
+              base = java_subtract(base, value);
               }
-              base += value;
               last_integer = base;
               last_instruction = other;
-            }
-            index = other;
+              index = other;
           } else {
             break;
           }
-- 
2.25.1

