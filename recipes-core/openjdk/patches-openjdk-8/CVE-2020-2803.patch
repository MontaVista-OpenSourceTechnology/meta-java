From 7b4bd92af5cb6680369b1e9817416ca1572e1b81 Mon Sep 17 00:00:00 2001
From: Anand Je Sypureddy <anandje@mvista.com>
Date: Thu, 13 Aug 2020 11:52:33 +0530
Subject: [PATCH 3/6] changeset 13895:a6dcbf49526c

8234841: Enhance buffering of byte buffers

Upstream Status: Backport http://hg.openjdk.java.net/jdk8u/jdk8u/jdk/rev/a6dcbf49526c
CVE: CVE-2020-2803

Reviewed-by: alanb, ahgross, rhalade, psandoz
Signed-off-by: Anand Je Sypureddy <anandje@mvista.com>
---
 .../classes/java/nio/ByteBufferAs-X-Buffer.java.template | 1 -
 .../share/classes/java/nio/Direct-X-Buffer.java.template | 1 -
 .../share/classes/java/nio/Heap-X-Buffer.java.template   | 9 ++++++---
 jdk/src/share/classes/java/nio/StringCharBuffer.java     | 9 ++++++---
 4 files changed, 12 insertions(+), 8 deletions(-)

diff --git a/jdk/src/share/classes/java/nio/ByteBufferAs-X-Buffer.java.template b/jdk/src/share/classes/java/nio/ByteBufferAs-X-Buffer.java.template
index bae62255..810b0f4b 100644
--- a/jdk/src/share/classes/java/nio/ByteBufferAs-X-Buffer.java.template
+++ b/jdk/src/share/classes/java/nio/ByteBufferAs-X-Buffer.java.template
@@ -72,7 +72,6 @@ class ByteBufferAs$Type$Buffer$RW$$BO$                  // package-private
     public $Type$Buffer slice() {
         int pos = this.position();
         int lim = this.limit();
-        assert (pos <= lim);
         int rem = (pos <= lim ? lim - pos : 0);
         int off = (pos << $LG_BYTES_PER_VALUE$) + offset;
         assert (off >= 0);
diff --git a/jdk/src/share/classes/java/nio/Direct-X-Buffer.java.template b/jdk/src/share/classes/java/nio/Direct-X-Buffer.java.template
index e9f6d9fd..fd7af812 100644
--- a/jdk/src/share/classes/java/nio/Direct-X-Buffer.java.template
+++ b/jdk/src/share/classes/java/nio/Direct-X-Buffer.java.template
@@ -206,7 +206,6 @@ class Direct$Type$Buffer$RW$$BO$
     public $Type$Buffer slice() {
         int pos = this.position();
         int lim = this.limit();
-        assert (pos <= lim);
         int rem = (pos <= lim ? lim - pos : 0);
         int off = (pos << $LG_BYTES_PER_VALUE$);
         assert (off >= 0);
diff --git a/jdk/src/share/classes/java/nio/Heap-X-Buffer.java.template b/jdk/src/share/classes/java/nio/Heap-X-Buffer.java.template
index e8639c4d..0b4acdb4 100644
--- a/jdk/src/share/classes/java/nio/Heap-X-Buffer.java.template
+++ b/jdk/src/share/classes/java/nio/Heap-X-Buffer.java.template
@@ -95,12 +95,15 @@ class Heap$Type$Buffer$RW$
     }
 
     public $Type$Buffer slice() {
+        int pos = this.position();
+        int lim = this.limit();
+        int rem = (pos <= lim ? lim - pos : 0);
         return new Heap$Type$Buffer$RW$(hb,
                                         -1,
                                         0,
-                                        this.remaining(),
-                                        this.remaining(),
-                                        this.position() + offset);
+                                        rem,
+                                        rem,
+                                        pos + offset);
     }
 
     public $Type$Buffer duplicate() {
diff --git a/jdk/src/share/classes/java/nio/StringCharBuffer.java b/jdk/src/share/classes/java/nio/StringCharBuffer.java
index 0c20fa66..a8f07f1c 100644
--- a/jdk/src/share/classes/java/nio/StringCharBuffer.java
+++ b/jdk/src/share/classes/java/nio/StringCharBuffer.java
@@ -42,12 +42,15 @@ class StringCharBuffer                                  // package-private
     }
 
     public CharBuffer slice() {
+        int pos = this.position();
+        int lim = this.limit();
+        int rem = (pos <= lim ? lim - pos : 0);
         return new StringCharBuffer(str,
                                     -1,
                                     0,
-                                    this.remaining(),
-                                    this.remaining(),
-                                    offset + this.position());
+                                    rem,
+                                    rem,
+                                    offset + pos);
     }
 
     private StringCharBuffer(CharSequence s,
-- 
2.28.0

